// Generated by CoffeeScript 1.8.0
var debug;

debug = true;

$(document).on("keypress", "#errorGeoaddress", function(e) {
  if (e.keyCode === 13) {
    return $("#errorGeoaddressSubmit").click();
  }
});

window.LocationManager = (function() {
  function LocationManager() {}

  LocationManager.theaterPosition = "";

  LocationManager.Init = function(args) {
    if (debug) {
      console.log(args);
    }
    LocationManager.theaterPosition = args;
    User.SaveMovie(args);
    LocationManager.GetLocation(args);
  };

  LocationManager.GetLocation = function() {
    return $.ajax({
      type: "GET",
      url: "" + address + "/gmaps",
      data: {
        origin: "" + User.latitude + ", " + User.longitude,
        destination: "" + LocationManager.theaterPosition.lat + ", " + LocationManager.theaterPosition.long
      },
      success: function(msg) {
        var bound1, bound2, bounds, map, mapCanvas, mapOptions, northeast, path, poly, polyOptions, southwest, step, x, y, _i, _len, _ref;
        console.log(msg);
        northeast = msg.result.routes[0].bounds.northeast;
        southwest = msg.result.routes[0].bounds.southwest;
        bounds = new google.maps.LatLngBounds();
        bound1 = new google.maps.LatLng(northeast.lat, northeast.lng);
        bound2 = new google.maps.LatLng(southwest.lat, southwest.lng);
        x = (parseInt(User.latitude) + parseInt(LocationManager.theaterPosition.lat)) / 2;
        y = (parseInt(User.longitude) + parseInt(LocationManager.theaterPosition.long)) / 2;
        mapCanvas = document.getElementById('maps');
        mapOptions = {
          center: new google.maps.LatLng(x, y),
          zoom: 8,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(mapCanvas, mapOptions);
        bounds.extend(bound1);
        bounds.extend(bound2);
        polyOptions = {
          strokeColor: '#7F0000',
          strokeOpacity: 1.0,
          strokeWeight: 3
        };
        poly = new google.maps.Polyline(polyOptions);
        poly.setMap(map);
        path = poly.getPath();
        _ref = msg.result.routes[0].legs[0].steps;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          step = _ref[_i];
          path.push(new google.maps.LatLng(step.start_location.lat, step.start_location.lng));
          path.push(new google.maps.LatLng(step.end_location.lat, step.end_location.lng));
        }
        new google.maps.Marker({
          position: new google.maps.LatLng(msg.result.routes[0].legs[0].start_location.lat, msg.result.routes[0].legs[0].start_location.lng),
          map: map,
          title: 'Hello World!'
        });
        new google.maps.Marker({
          position: new google.maps.LatLng(msg.result.routes[0].legs[0].end_location.lat, msg.result.routes[0].legs[0].end_location.lng),
          map: map,
          title: 'Hello World!'
        });
        return map.fitBounds(bounds);
      },
      error: function(err) {
        return alert("location error");
      }
    });
  };

  LocationManager.GetLocationError = function(err) {
    if (err.code === 1) {
      return alert("Error: Access is denied!");
    } else if (err.code === 2) {
      return alert("Error: Position is unavailable!");
    } else {
      return console.log("error");
    }
  };

  LocationManager.GetocationFromPlace = function(coordinates) {
    return $.ajax({
      type: "GET",
      url: "https://maps.googleapis.com/maps/api/geocode/json",
      data: {
        address: coordinates
      },
      success: function(data) {
        if (debug) {
          console.log(data);
        }
        User.SetLocation(data.results[0].geometry.location.lat, data.results[0].geometry.location.lng);
        return $('#errorGeolocation').foundation('reveal', 'close');
      },
      error: function(err) {
        return console.log(err);
      }
    });
  };

  return LocationManager;

})();
